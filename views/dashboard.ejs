<!-- Loading State -->
<div id="loading-state" class="text-center p-4">
  <p>Loading dashboard...</p>
</div>

<!-- Dashboard Content -->
<div id="dashboard-content" class="d-none">
  <!-- Dashboard Header -->
  <div class="card mb-4">
    <div class="card-body">
      <h1 class="card-title">Dashboard</h1>
      <p class="card-text">Welcome back, <span id="user-name">User</span>! Manage your blog posts and view your activity.</p>
      <a href="/api-flux-blog/create-blog" class="btn btn-primary">‚úçÔ∏è Write New Blog</a>
    </div>
  </div>

  <!-- Stats Cards -->
  <div class="d-flex gap-3 mb-4" style="flex-wrap: wrap;">
    <div class="card" style="flex: 1; min-width: 200px;">
      <div class="card-body text-center">
        <h3 class="card-title" id="total-blogs" style="color: var(--color-primary); font-size: var(--font-size-xlarge);">
          0
        </h3>
        <p class="card-text">Total Blogs</p>
      </div>
    </div>
    
    <div class="card" style="flex: 1; min-width: 200px;">
      <div class="card-body text-center">
        <h3 class="card-title" id="total-likes" style="color: var(--color-success); font-size: var(--font-size-xlarge);">
          0
        </h3>
        <p class="card-text">Total Likes</p>
      </div>
    </div>
    
    <div class="card" style="flex: 1; min-width: 200px;">
      <div class="card-body text-center">
        <h3 class="card-title" id="total-comments" style="color: var(--color-info); font-size: var(--font-size-xlarge);">
          0
        </h3>
        <p class="card-text">Total Comments</p>
      </div>
    </div>
  </div>

  <!-- My Blogs -->
  <div class="card">
    <div class="card-header">
      <h2 class="card-title mb-0">My Blog Posts</h2>
    </div>
    <div class="card-body">
      <div id="blogs-container">
        <!-- Blogs will be loaded here -->
      </div>
    </div>
  </div>
</div>

<!-- Error State -->
<div id="error-state" class="d-none text-center">
  <div class="alert alert-danger">
    <strong>Error:</strong> <span id="error-message">Failed to load dashboard data</span>
  </div>
  <button onclick="loadDashboard()" class="btn btn-primary">Try Again</button>
</div>
  </div>
</div>

<script>
// Dashboard data loading
async function loadDashboard() {
  const token = localStorage.getItem('token');
  if (!token) {
    window.location.href = '/login';
    return;
  }

  const user = JSON.parse(localStorage.getItem('user') || '{}');
  document.getElementById('user-name').textContent = user.full_name || user.username || 'User';

  try {
    // Load user's blogs
    const blogsResponse = await fetch('/api-flux-api/blogs/my?page=1&limit=20', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    if (!blogsResponse.ok) {
      throw new Error('Failed to load blogs');
    }

    const blogsResult = await blogsResponse.json();

    // Load user stats
    const statsResponse = await fetch('/api-flux-api/users/me/stats', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    let stats = { totalBlogs: 0, totalLikes: 0, totalComments: 0 };
    if (statsResponse.ok) {
      const statsResult = await statsResponse.json();
      stats = statsResult.data;
    }

    // Update UI
    updateDashboard(blogsResult.data, stats);
    
    document.getElementById('loading-state').classList.add('d-none');
    document.getElementById('dashboard-content').classList.remove('d-none');

  } catch (error) {
    console.error('Error loading dashboard:', error);
    document.getElementById('error-message').textContent = error.message;
    document.getElementById('loading-state').classList.add('d-none');
    document.getElementById('error-state').classList.remove('d-none');
  }
}

function updateDashboard(blogs, stats) {
  // Update stats
  document.getElementById('total-blogs').textContent = stats.totalBlogs;
  document.getElementById('total-likes').textContent = stats.totalLikes;
  document.getElementById('total-comments').textContent = stats.totalComments;

  // Update blogs list
  const blogsContainer = document.getElementById('blogs-container');
  
  if (blogs && blogs.length > 0) {
    const blogsHtml = blogs.map((blog, index) => `
      <article class="blog-post">
        <div class="d-flex justify-content-between align-items-start">
          <div style="flex: 1;">
            <h3 class="card-title">
              <a href="/api-flux-blog/blogs/${blog.id}" style="text-decoration: none; color: inherit;">
                ${blog.title}
              </a>
              ${!blog.is_published ? '<span class="badge" style="background-color: var(--color-warning); color: var(--color-white); padding: 2px 6px; border-radius: 4px; font-size: var(--font-size-small);">Draft</span>' : ''}
            </h3>
            
            <div class="blog-meta">
              <span class="blog-date">${new Date(blog.created_at).toLocaleDateString()}</span>
              ${blog.updated_at !== blog.created_at ? `<span>‚Ä¢</span><span class="blog-date">Updated ${new Date(blog.updated_at).toLocaleDateString()}</span>` : ''}
              <span>‚Ä¢</span>
              <span>‚ù§Ô∏è ${blog.likes_count || 0} likes</span>
              <span>‚Ä¢</span>
              <span>üí¨ ${blog.comments_count || 0} comments</span>
            </div>
            
            ${blog.excerpt ? `<p class="blog-excerpt">${blog.excerpt}</p>` : ''}
          </div>
          
          <div class="blog-actions" style="margin-left: var(--spacing-medium);">
            <a href="/api-flux-blog/edit-blog/${blog.id}" class="btn btn-sm btn-outline">Edit</a>
            <button class="btn btn-sm btn-danger" onclick="deleteBlog(${blog.id})">Delete</button>
          </div>
        </div>
        ${index < blogs.length - 1 ? '<hr>' : ''}
      </article>
    `).join('');
    
    blogsContainer.innerHTML = blogsHtml;
  } else {
    blogsContainer.innerHTML = `
      <div class="text-center">
        <h3 class="card-title">No Blog Posts Yet</h3>
        <p class="card-text">Start sharing your thoughts with the world!</p>
        <a href="/api-flux-blog/create-blog" class="btn btn-primary">Write Your First Blog</a>
      </div>
    `;
  }
}

// Delete blog functionality
async function deleteBlog(blogId) {
  if (!confirm('Are you sure you want to delete this blog post? This action cannot be undone.')) {
    return;
  }
  
  const token = localStorage.getItem('token');
  if (!token) {
    alert('Please login to delete posts');
    return;
  }
  
  try {
    const response = await fetch(`/api-flux-api/blogs/${blogId}`, {
      method: 'DELETE',
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    
    const result = await response.json();
    
    if (result.success) {
      // Reload dashboard data
      loadDashboard();
    } else {
      alert(result.message);
    }
  } catch (error) {
    console.error('Error deleting blog:', error);
    alert('Error deleting blog');
  }
}

// Load dashboard on page load
document.addEventListener('DOMContentLoaded', loadDashboard);
</script>
